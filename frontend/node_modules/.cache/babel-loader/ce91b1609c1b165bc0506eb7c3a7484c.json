{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\13233\\\\Desktop\\\\portfolio\\\\user-login\\\\user-login\\\\frontend\\\\src\\\\components\\\\Users.jsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Users = () => {\n  _s();\n  //State variable for users fetched from database.\n  const [users, setUsers] = useState([]);\n\n  //State variable for pop up message when removing user.\n  const [confirmationPopUp, setConfirmationPopUp] = useState({\n    id: 0,\n    message: \"\",\n    isPopUp: false\n  });\n\n  //Fetches users from the database on component load once.\n  useEffect(() => {\n    axios.get(\"http://localhost:3005/users/all-users\").then(response => setUsers(response.data));\n  }, []);\n  const popUpMessage = toRemoveUser => {\n    //Configure state variable for the pop up message.\n    setConfirmationPopUp(prevData => ({\n      ...prevData,\n      id: toRemoveUser.id,\n      isPopUp: true,\n      message: `Are you sure you want to delete username: ${toRemoveUser.username}?`\n    }));\n  };\n  const confirmed = () => {\n    removeUser(confirmationPopUp);\n  };\n  const removeUser = async toRemoveUser => {\n    //Pass user id to as a url parameter.\n    await axios.delete(`http://localhost:3005/users/delete/${toRemoveUser.id}`).then(() => {\n      //Create a new array with remaining users.\n      const newUsers = users.filter(user => user.id != toRemoveUser.id);\n      setUsers(newUsers);\n\n      //Clean up state variable for pop up message.\n      setConfirmationPopUp(prevData => ({\n        ...prevData,\n        id: 0,\n        message: \"\",\n        isPopUp: false\n      }));\n    });\n  };\n\n  //Display Array of users\n  const mappedUsers = users.map((user, index) => {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: user.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: user.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => popUpMessage(user),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"users-table\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: [mappedUsers, confirmationPopUp.isPopUp ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"confirmationPopUp\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"popUpText\",\n          children: confirmationPopUp.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: confirmed,\n          children: \"Yes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setConfirmationPopUp(prevData => ({\n            ...prevData,\n            isPopUp: false\n          })),\n          children: \"No\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: \"Return to home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n_s(Users, \"5Z45NXqDYwXpHOW+GFkzQNvr3sA=\");\n_c = Users;\nexport default Users;\nvar _c;\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"names":["axios","useEffect","useState","Link","Users","users","setUsers","confirmationPopUp","setConfirmationPopUp","id","message","isPopUp","get","then","response","data","popUpMessage","toRemoveUser","prevData","username","confirmed","removeUser","delete","newUsers","filter","user","mappedUsers","map","index","email"],"sources":["C:/Users/13233/Desktop/portfolio/user-login/user-login/frontend/src/components/Users.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Users = () => {\r\n\r\n    //State variable for users fetched from database.\r\n    const [users, setUsers] = useState([]);\r\n\r\n    //State variable for pop up message when removing user.\r\n    const [confirmationPopUp, setConfirmationPopUp] = useState({\r\n        id: 0,\r\n        message: \"\",\r\n        isPopUp: false,\r\n    });\r\n\r\n    //Fetches users from the database on component load once.\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:3005/users/all-users\")\r\n            .then((response) => setUsers(response.data))\r\n    }, [])\r\n\r\n    const popUpMessage = (toRemoveUser) => {\r\n        //Configure state variable for the pop up message.\r\n        setConfirmationPopUp((prevData) => ({\r\n            ...prevData,\r\n            id: toRemoveUser.id,\r\n            isPopUp: true,\r\n            message: `Are you sure you want to delete username: ${toRemoveUser.username}?`\r\n        }));\r\n    }\r\n\r\n    const confirmed = () => {\r\n        removeUser(confirmationPopUp);\r\n    }\r\n\r\n    const removeUser = async (toRemoveUser) => {\r\n        //Pass user id to as a url parameter.\r\n        await axios.delete(`http://localhost:3005/users/delete/${toRemoveUser.id}`)\r\n            .then(() => {\r\n                //Create a new array with remaining users.\r\n                const newUsers = users.filter((user) => user.id != toRemoveUser.id);\r\n                setUsers(newUsers);\r\n\r\n                //Clean up state variable for pop up message.\r\n                setConfirmationPopUp((prevData) => ({\r\n                    ...prevData,\r\n                    id: 0,\r\n                    message: \"\",\r\n                    isPopUp: false\r\n                }));\r\n            });\r\n\r\n    }\r\n\r\n    //Display Array of users\r\n    const mappedUsers = users.map((user, index) => {\r\n        return (\r\n            <tr key={index}>\r\n                <td>\r\n                    {user.username}\r\n                </td>\r\n                <td>\r\n                    {user.email}\r\n                </td>\r\n                <button onClick={() => popUpMessage(user)}>X</button>\r\n                {/* Edit button in progress */}\r\n                <button>Edit</button>\r\n            </tr>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <table className=\"users-table\">\r\n            <thead>\r\n                <tr>\r\n                    <th>Username</th>\r\n                    <th>Email</th>\r\n                </tr>\r\n                {/* <td>\r\n                    Email\r\n                </td> */}\r\n            </thead>\r\n            <tbody>\r\n                {mappedUsers}\r\n                {/* Conditiionally render pop up message */}\r\n                {confirmationPopUp.isPopUp ?\r\n                    <div className=\"confirmationPopUp\">\r\n                        <p id=\"popUpText\">{confirmationPopUp.message}</p>\r\n                        <button onClick={confirmed}>Yes</button>\r\n                        <button onClick={() => setConfirmationPopUp((prevData) => ({ ...prevData, isPopUp: false }))}>No</button>\r\n                    </div>\r\n                    : null\r\n                }\r\n            </tbody>\r\n            <Link to=\"/\">Return to home</Link>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default Users;"],"mappings":"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"},"metadata":{},"sourceType":"module"}