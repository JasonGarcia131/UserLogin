{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\13233\\\\Desktop\\\\portfolio\\\\user-login\\\\user-login\\\\frontend\\\\src\\\\components\\\\Users.jsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Users = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [confirmationPopUp, setConfirmationPopUp] = useState({\n    user_id: 0,\n    message: \"\",\n    isPopUp: false,\n    isConfirmed: false\n  });\n  console.log(\"users\", users);\n  useEffect(() => {\n    axios.get(\"http://localhost:3005/users/all-users\").then(response => setUsers(response.data));\n  }, []);\n  const confirmDelete = (toRemoveUser, index) => {\n    //isPopUp == true to render the pop up.\n    setConfirmationPopUp(prevData => ({\n      ...prevData,\n      user_id: toRemoveUser.id,\n      isPopUp: true,\n      message: `Are you sure you want to delete user ${toRemoveUser.id}`\n    }));\n    removeUser(toRemoveUser);\n  };\n  const confirmed = () => {\n    console.log(\"confirmed user id\", confirmationPopUp.id);\n    setConfirmationPopUp(prevData => ({\n      ...prevData,\n      isConfirmed: true\n    }));\n    // removeUser();\n  };\n\n  const removeUser = async (toRemoveUser, index) => {\n    //Pop up module to confirm user delete\n    confirmationPopUp.isConfirmed ? console.log(\"clicked yes\") : console.log(\"other\");\n\n    // if(confirmationPopUp.isConfirmed){\n    return;\n    // await axios.delete(`http://localhost:3005/users/delete/${toRemoveUser.id}`)\n    // .then(()=>{\n    //     console.log(\"User id deleted\", toRemoveUser)\n    //     const newUsers = users.filter((user)=>user.id != toRemoveUser.id);\n    //     console.log(\"----------------new users----------------\", newUsers);\n    //     setUsers(newUsers);\n    //     // }); \n    // }else{\n    //     console.log(\"Clicked no\")\n    //     return\n    // setConfirmationPopUp((prevData)=>({...prevData, isPopUp: false}))\n    // }\n    // console.log(\"Did not run test\")\n  };\n\n  const mappedUsers = users.map((user, index) => {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: user.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: user.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => confirmDelete(user, index),\n        children: \"Remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 12\n    }, this);\n  });\n  console.log(\"users\", users);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"users-table\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: [mappedUsers, confirmationPopUp.isPopUp ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"confirmationPopUp\",\n        children: [confirmationPopUp.message, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: confirmed(),\n          children: \"Yes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setConfirmationPopUp(prevData => ({\n            ...prevData,\n            isConfirmed: false\n          })),\n          children: \"No\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n_s(Users, \"D35Rlbm4HFpCKMz78IVCKFvvon8=\");\n_c = Users;\nexport default Users;\nvar _c;\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"names":["axios","useEffect","useState","Users","users","setUsers","confirmationPopUp","setConfirmationPopUp","user_id","message","isPopUp","isConfirmed","console","log","get","then","response","data","confirmDelete","toRemoveUser","index","prevData","id","removeUser","confirmed","mappedUsers","map","user","username","email"],"sources":["C:/Users/13233/Desktop/portfolio/user-login/user-login/frontend/src/components/Users.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\n\r\nconst Users = () => {\r\n\r\n    const [users, setUsers] = useState([]);\r\n    const [confirmationPopUp, setConfirmationPopUp] = useState({\r\n        user_id: 0,\r\n        message: \"\",\r\n        isPopUp: false,\r\n        isConfirmed: false\r\n    });\r\n\r\n    console.log(\"users\", users);\r\n\r\n    useEffect(()=>{\r\n        axios.get(\"http://localhost:3005/users/all-users\")\r\n        .then((response)=>setUsers(response.data))\r\n    },[]) \r\n    \r\n    const confirmDelete = (toRemoveUser, index) => {\r\n        //isPopUp == true to render the pop up.\r\n        setConfirmationPopUp((prevData)=>({\r\n            ...prevData,\r\n            user_id: toRemoveUser.id,\r\n            isPopUp: true,\r\n            message: `Are you sure you want to delete user ${toRemoveUser.id}`\r\n        }));\r\n        removeUser(toRemoveUser);\r\n    }\r\n\r\n    const confirmed = () => {\r\n        console.log(\"confirmed user id\", confirmationPopUp.id)\r\n\r\n        setConfirmationPopUp((prevData)=>({...prevData, isConfirmed: true}));\r\n        // removeUser();\r\n    }\r\n    const removeUser = async (toRemoveUser, index) => {\r\n            //Pop up module to confirm user delete\r\n            confirmationPopUp.isConfirmed ? console.log(\"clicked yes\") : console.log(\"other\");\r\n            \r\n            // if(confirmationPopUp.isConfirmed){\r\n                return\r\n                // await axios.delete(`http://localhost:3005/users/delete/${toRemoveUser.id}`)\r\n                // .then(()=>{\r\n                //     console.log(\"User id deleted\", toRemoveUser)\r\n                //     const newUsers = users.filter((user)=>user.id != toRemoveUser.id);\r\n                //     console.log(\"----------------new users----------------\", newUsers);\r\n                //     setUsers(newUsers);\r\n            //     // }); \r\n            // }else{\r\n            //     console.log(\"Clicked no\")\r\n            //     return\r\n            // setConfirmationPopUp((prevData)=>({...prevData, isPopUp: false}))\r\n            // }\r\n            // console.log(\"Did not run test\")\r\n            \r\n    }\r\n\r\n    const mappedUsers = users.map((user, index)=>{\r\n        return (\r\n           <tr key={index}>\r\n            <td>\r\n                {user.username}\r\n            </td>\r\n            <td>\r\n                {user.email}\r\n            </td>\r\n            <button onClick={()=>confirmDelete(user, index)}>Remove</button>\r\n            <button>Edit</button>\r\n           </tr>\r\n        )\r\n    }) \r\n    console.log(\"users\", users);\r\n\r\n    return(\r\n        <table className=\"users-table\">\r\n            <thead>\r\n                <td>\r\n                    Username\r\n                </td>\r\n                <td>\r\n                    Email\r\n                </td>\r\n            </thead>\r\n            <tbody>\r\n                 {mappedUsers}\r\n                 {confirmationPopUp.isPopUp ? \r\n                <div className=\"confirmationPopUp\">\r\n                    {confirmationPopUp.message}\r\n                    <button onClick={confirmed()}>Yes</button>\r\n                    <button  onClick={()=>setConfirmationPopUp((prevData)=>({...prevData, isConfirmed: false}))}>No</button>\r\n                </div> \r\n                : null\r\n            }\r\n            </tbody>\r\n          \r\n        </table>\r\n    )\r\n}\r\n\r\nexport default Users;"],"mappings":"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"},"metadata":{},"sourceType":"module"}