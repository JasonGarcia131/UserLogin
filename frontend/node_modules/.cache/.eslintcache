[{"C:\\Users\\13233\\Desktop\\portfolio\\user-login\\user-login\\frontend\\src\\App.js":"1","C:\\Users\\13233\\Desktop\\portfolio\\user-login\\user-login\\frontend\\src\\pages\\Home.js":"2","C:\\Users\\13233\\Desktop\\portfolio\\user-login\\user-login\\frontend\\src\\pages\\Profile.js":"3","C:\\Users\\13233\\Desktop\\portfolio\\user-login\\user-login\\frontend\\src\\features\\Login.js":"4","C:\\Users\\13233\\Desktop\\portfolio\\user-login\\user-login\\frontend\\src\\pages\\LinkPage.js":"5","C:\\Users\\13233\\Desktop\\portfolio\\user-login\\user-login\\frontend\\src\\components\\UserCard.js":"6","C:\\Users\\13233\\Desktop\\portfolio\\user-login\\user-login\\frontend\\src\\components\\Banner.js":"7","C:\\Users\\13233\\Desktop\\portfolio\\user-login\\user-login\\frontend\\src\\components\\MainCard.js":"8","C:\\Users\\13233\\Desktop\\portfolio\\user-login\\user-login\\frontend\\src\\pages\\PublicProfile.js":"9","C:\\Users\\13233\\Desktop\\portfolio\\user-login\\user-login\\frontend\\src\\components\\PublicMainCard.js":"10","C:\\Users\\13233\\Desktop\\portfolio\\user-login\\user-login\\frontend\\src\\components\\handlePaginate.js":"11","C:\\Users\\13233\\Desktop\\portfolio\\user-login\\user-login\\frontend\\src\\features\\Register.js":"12","C:\\Users\\13233\\Desktop\\portfolio\\user-login\\user-login\\frontend\\src\\components\\Select.js":"13","C:\\Users\\13233\\Desktop\\portfolio\\user-login\\user-login\\frontend\\src\\pages\\News.js":"14","C:\\Users\\13233\\Desktop\\portfolio\\user-login\\user-login\\frontend\\src\\pages\\Feedback.js":"15","C:\\Users\\13233\\Desktop\\portfolio\\user-login\\user-login\\frontend\\src\\components\\PostTextBox.js":"16","C:\\Users\\13233\\Desktop\\portfolio\\user-login\\user-login\\frontend\\src\\index.js":"17","C:\\Users\\13233\\Desktop\\portfolio\\user-login\\user-login\\frontend\\src\\context\\AuthProvider.js":"18","C:\\Users\\13233\\Desktop\\portfolio\\user-login\\user-login\\frontend\\src\\pages\\Unauthorized.js":"19","C:\\Users\\13233\\Desktop\\portfolio\\user-login\\user-login\\frontend\\src\\pages\\Missing.js":"20","C:\\Users\\13233\\Desktop\\portfolio\\user-login\\user-login\\frontend\\src\\components\\PersistLogin.js":"21","C:\\Users\\13233\\Desktop\\portfolio\\user-login\\user-login\\frontend\\src\\components\\RequireAuth.js":"22","C:\\Users\\13233\\Desktop\\portfolio\\user-login\\user-login\\frontend\\src\\components\\Layout.js":"23","C:\\Users\\13233\\Desktop\\portfolio\\user-login\\user-login\\frontend\\src\\api\\axios.js":"24","C:\\Users\\13233\\Desktop\\portfolio\\user-login\\user-login\\frontend\\src\\hooks\\useAuth.js":"25","C:\\Users\\13233\\Desktop\\portfolio\\user-login\\user-login\\frontend\\src\\hooks\\useLogout.js":"26","C:\\Users\\13233\\Desktop\\portfolio\\user-login\\user-login\\frontend\\src\\hooks\\useRefreshToken.js":"27","C:\\Users\\13233\\Desktop\\portfolio\\user-login\\user-login\\frontend\\src\\components\\Post.js":"28","C:\\Users\\13233\\Desktop\\portfolio\\user-login\\user-login\\frontend\\src\\components\\NavBar.js":"29","C:\\Users\\13233\\Desktop\\portfolio\\user-login\\user-login\\frontend\\src\\pages\\About.js":"30"},{"size":2043,"mtime":1673472197052,"results":"31","hashOfConfig":"32"},{"size":1787,"mtime":1673472030653,"results":"33","hashOfConfig":"32"},{"size":3958,"mtime":1673420009762,"results":"34","hashOfConfig":"32"},{"size":3608,"mtime":1673384743089,"results":"35","hashOfConfig":"32"},{"size":450,"mtime":1673462130249,"results":"36","hashOfConfig":"32"},{"size":960,"mtime":1673420009755,"results":"37","hashOfConfig":"32"},{"size":1076,"mtime":1673420009750,"results":"38","hashOfConfig":"32"},{"size":3845,"mtime":1673420009751,"results":"39","hashOfConfig":"32"},{"size":3441,"mtime":1673420122092,"results":"40","hashOfConfig":"32"},{"size":2528,"mtime":1673420009753,"results":"41","hashOfConfig":"32"},{"size":453,"mtime":1673403327141,"results":"42","hashOfConfig":"32"},{"size":7920,"mtime":1673420009756,"results":"43","hashOfConfig":"32"},{"size":767,"mtime":1673472436035,"results":"44","hashOfConfig":"32"},{"size":640,"mtime":1673420009761,"results":"45","hashOfConfig":"32"},{"size":1538,"mtime":1673422994475,"results":"46","hashOfConfig":"32"},{"size":1547,"mtime":1673420009752,"results":"47","hashOfConfig":"32"},{"size":699,"mtime":1672713033325,"results":"48","hashOfConfig":"32"},{"size":476,"mtime":1672713033313,"results":"49","hashOfConfig":"32"},{"size":533,"mtime":1672713033328,"results":"50","hashOfConfig":"32"},{"size":365,"mtime":1672713033327,"results":"51","hashOfConfig":"32"},{"size":1372,"mtime":1672713033308,"results":"52","hashOfConfig":"32"},{"size":820,"mtime":1672713033311,"results":"53","hashOfConfig":"32"},{"size":191,"mtime":1672713033307,"results":"54","hashOfConfig":"32"},{"size":286,"mtime":1672713033303,"results":"55","hashOfConfig":"32"},{"size":317,"mtime":1672713033319,"results":"56","hashOfConfig":"32"},{"size":445,"mtime":1672713033322,"results":"57","hashOfConfig":"32"},{"size":596,"mtime":1673129895415,"results":"58","hashOfConfig":"32"},{"size":884,"mtime":1673141142263,"results":"59","hashOfConfig":"32"},{"size":600,"mtime":1673229862650,"results":"60","hashOfConfig":"32"},{"size":546,"mtime":1673472349987,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"10kjzis",{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"72"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"72"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"72"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"72"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"72"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"72"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"72"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"72"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"72"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"72"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"72"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"72"},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\13233\\Desktop\\portfolio\\user-login\\user-login\\frontend\\src\\App.js",[],[],"C:\\Users\\13233\\Desktop\\portfolio\\user-login\\user-login\\frontend\\src\\pages\\Home.js",["167","168"],[],"C:\\Users\\13233\\Desktop\\portfolio\\user-login\\user-login\\frontend\\src\\pages\\Profile.js",["169"],[],"import Banner from \"../components/Banner\";\r\nimport UserCard from \"../components/UserCard\";\r\nimport MainCard from \"../components/MainCard\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport useAuth from \"../hooks/useAuth\";\r\nimport { axiosPrivate } from \"../api/axios\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nconst LIMIT = 10;\r\nfunction Profile() {\r\n\r\n    //Authenticated User\r\n    const { auth } = useAuth();\r\n\r\n    //User info decoded from the access token\r\n    const decode = auth.accessToken\r\n        ? jwt_decode(auth.accessToken)\r\n        : undefined\r\n\r\n    const user = decode?.UserInfo;\r\n    const id = user?.userId;\r\n    const bannerImageLight = user?.bannerImageLight;\r\n    const bannerImageShadow = user?.bannerImageShadow;\r\n\r\n\r\n\r\n\r\n    const [theme, setTheme] = useState(\"light\");\r\n    const [paginatedPosts, setPaginatedPosts] = useState([]);\r\n\r\n    // State variable for a single post\r\n    const [post, setPost] = useState({\r\n        id: id,\r\n        postTheme: theme,\r\n        content: \"\",\r\n        isPrivate: false\r\n    });\r\n\r\n    //State variable for the pagination results\r\n    const [page, setPage] = useState({\r\n        next: {\r\n            page: 0,\r\n            limit: 0\r\n        },\r\n        previous: {\r\n            page: 0,\r\n            limit: 0\r\n        },\r\n    });\r\n\r\n    //State variable for any error messages\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    //Fetch posts on page load.\r\n    useEffect(() => {\r\n\r\n        getPosts(1);\r\n\r\n    }, []);\r\n\r\n    //Changes the theme of the page.\r\n    const handleChangeTheme = (themeChosen) => {\r\n        setPaginatedPosts([]);\r\n        setTheme(themeChosen);\r\n        setPost((prevData)=>({...prevData, postTheme: themeChosen}));\r\n    }\r\n\r\n    const getPosts = async (nextPage) => {\r\n        const controller = new AbortController();\r\n        try {\r\n\r\n            const response = await axiosPrivate.get(`/posts/paginate/?id=${id}&page=${nextPage}&limit=${LIMIT}&theme=${theme}`, {\r\n                signal: controller.signal\r\n            });\r\n\r\n            controller.abort();\r\n\r\n            setPage({\r\n                next: response?.data?.next,\r\n                previous: response?.data?.previous,\r\n                total: response?.data?.total\r\n            });\r\n\r\n            setPaginatedPosts([...paginatedPosts, response?.data?.results]);\r\n\r\n        } catch (e) {\r\n\r\n            console.log(\"error\", e);\r\n        }\r\n    }\r\n\r\n\r\n    const handleSubmit = async (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        if (post.content.length === 0) return setMessage(\"Oops... please try again.\");\r\n\r\n        if (post.length > 100) return setMessage(\"You've exceeded the number of words!\");\r\n\r\n        try {\r\n\r\n            const response = await axiosPrivate.post(`/posts`, post);\r\n\r\n            //Sets the most recent post on the page.\r\n            setPaginatedPosts([...paginatedPosts, response.data]);\r\n            setPage((prevData) => ({ ...prevData, total: page.total + 1 }));\r\n\r\n            //Re-initialize state variables\r\n            setPost({\r\n                id: id,\r\n                postTheme: theme,\r\n                content: \"\",\r\n                isPrivate: false\r\n            })\r\n            setMessage(\"Entry recored\");\r\n\r\n            window.location.reload();\r\n\r\n        } catch (e) {\r\n            console.log(\"error\", e);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"profileWrapper\">\r\n            <Banner theme={theme} setTheme={setTheme} handleChangeTheme={handleChangeTheme} bannerImageLight={bannerImageLight} bannerImageShadow={bannerImageShadow} />\r\n            <UserCard theme={theme} user={user} numberOfPosts={page.total} />\r\n            <MainCard theme={theme} user={user} paginatedPosts={paginatedPosts.flat()} setPaginatedPosts={setPaginatedPosts} setPost={setPost} post={post} handleSubmit={handleSubmit} message={message} page={page} getPosts={getPosts} />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Profile;",[],"C:\\Users\\13233\\Desktop\\portfolio\\user-login\\user-login\\frontend\\src\\features\\Login.js",["170"],[],"import { useRef, useState, useEffect } from 'react';\r\nimport useAuth from '../hooks/useAuth';\r\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\r\nimport jwt_decode from 'jwt-decode';\r\n\r\nimport axios from '../api/axios';\r\nconst LOGIN_URL = '/auth';\r\n\r\nconst Login = () => {\r\n    const { setAuth, persist, setPersist } = useAuth();\r\n\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const from = location.state?.from?.pathname || \"/profile\";\r\n\r\n    const userRef = useRef();\r\n    const errRef = useRef();\r\n\r\n    const [user, setUser] = useState('');\r\n    const [pwd, setPwd] = useState('');\r\n    const [errMsg, setErrMsg] = useState('');\r\n\r\n    useEffect(() => {\r\n        userRef.current.focus();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setErrMsg('');\r\n    }, [user, pwd])\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            const response = await axios.post(LOGIN_URL,\r\n                JSON.stringify({ user, pwd }),\r\n                {\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    withCredentials: true\r\n                }\r\n            );\r\n            const accessToken = response?.data?.accessToken;\r\n\r\n            setAuth({accessToken });\r\n            setUser('');\r\n            setPwd('');\r\n            navigate(from, { replace: true });\r\n        } catch (err) {\r\n            if (!err?.response) {\r\n                setErrMsg('No Server Response');\r\n            } else if (err.response?.status === 400) {\r\n                setErrMsg('Missing Username or Password');\r\n            } else if (err.response?.status === 401) {\r\n                setErrMsg('Unauthorized');\r\n            } else {\r\n                setErrMsg('Login Failed');\r\n            }\r\n            errRef.current.focus();\r\n        }\r\n    }\r\n\r\n    const togglePersist = () => {\r\n        setPersist(prev => !prev);\r\n    }\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"persist\", persist);\r\n    }, [persist])\r\n\r\n    return (\r\n\r\n        <section>\r\n            <p ref={errRef} className={errMsg ? \"errmsg\" : \"offscreen\"} aria-live=\"assertive\">{errMsg}</p>\r\n            <h1>Sign In</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <label htmlFor=\"username\">Username:</label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"username\"\r\n                    ref={userRef}\r\n                    autoComplete=\"off\"\r\n                    onChange={(e) => setUser(e.target.value)}\r\n                    value={user}\r\n                    required\r\n                />\r\n\r\n                <label htmlFor=\"password\">Password:</label>\r\n                <input\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    onChange={(e) => setPwd(e.target.value)}\r\n                    value={pwd}\r\n                    required\r\n                />\r\n                <button>Sign In</button>\r\n                <div className=\"persistCheck\">\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        id=\"persist\"\r\n                        onChange={togglePersist}\r\n                        checked={persist}\r\n                    />\r\n                    <label htmlFor=\"persist\">Trust This Device</label>\r\n                </div>\r\n            </form>\r\n            <p>\r\n                Need an Account?<br />\r\n                <span className=\"line\">\r\n                    <Link to=\"/register\">Sign Up</Link>\r\n                </span>\r\n            </p>\r\n        </section>\r\n\r\n    )\r\n}\r\n\r\nexport default Login\r\n","C:\\Users\\13233\\Desktop\\portfolio\\user-login\\user-login\\frontend\\src\\pages\\LinkPage.js",[],[],"C:\\Users\\13233\\Desktop\\portfolio\\user-login\\user-login\\frontend\\src\\components\\UserCard.js",["171","172","173","174"],[],"import React, { useEffect, useState } from \"react\";\r\nimport \"../pages/profile.css\"\r\nimport useAuth from \"../hooks/useAuth\";\r\n\r\n\r\nfunction UserCard(props) {\r\n\r\n    const [totalPosts, setTotalPosts] = useState(0);\r\n\r\n\r\n    const { theme, user, numberOfPosts } = props;\r\n    const { username, profilePicture, bio } = user;\r\n\r\n    return (\r\n        <aside id=\"userCardWrapper\" className={theme === \"light\" ? \"lightUserCard\" : \"shadowUserCard\"}>\r\n            <div className=\"profilePictureWrapper\">\r\n                <img className=\"profilePicture\" src={profilePicture} alt=\"avatar\" />\r\n            </div>\r\n            <h1 className=\"userNameWrapper\">\r\n                {username}\r\n            </h1>\r\n            <p className=\"userBioWrapper\">\r\n                {bio}\r\n            </p>\r\n            <div className=\"friendsWrapper\">\r\n               {numberOfPosts} <span>Journal Entries</span>\r\n            </div>\r\n        </aside>\r\n    )\r\n}\r\n\r\nexport default UserCard;","C:\\Users\\13233\\Desktop\\portfolio\\user-login\\user-login\\frontend\\src\\components\\Banner.js",[],[],"C:\\Users\\13233\\Desktop\\portfolio\\user-login\\user-login\\frontend\\src\\components\\MainCard.js",["175","176"],[],"import React, { useState } from \"react\";\r\nimport PostTextBox from \"./PostTextBox\";\r\nimport Post from \"./Post\";\r\nimport \"../pages/profile.css\"\r\nimport { handleInfiniteScroll } from \"./handlePaginate\";\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport { useEffect } from \"react\";\r\nimport axios from \"../api/axios\";\r\n\r\n\r\nfunction MainCard(props) {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    const { theme, user, paginatedPosts, setPost, post, message, page, getPosts, setPaginatedPosts, handleSubmit } = props;\r\n\r\n    const { id } = user;\r\n\r\n    const handleDelete = async (id) => {\r\n\r\n        //Toggles delete button to hide or show\r\n        if (!id) return setEditMode(!editMode);\r\n\r\n        try {\r\n\r\n            const response = await axios.delete(`/posts/${id}`);\r\n            const filteredPost = paginatedPosts.flat().filter(post => post._id != response.data._id);\r\n            setPaginatedPosts(filteredPost);\r\n\r\n        } catch (e) {\r\n\r\n            console.log(\"error\", e);\r\n\r\n        }\r\n    }\r\n\r\n    //////////Need to find to hide delete button\r\n    console.log(\"posts in main card\", paginatedPosts)\r\n    //commented to test infinte scroll feature.\r\n    // const mappedPost = paginatedPosts?.map((post, i) => {\r\n    //     return (\r\n    //         <div key={i} >\r\n    //             <Post username={post.author.username} profilePicture={post.author.profilePicture} content={post.content} handleDelete={handleDelete} theme={post.theme} date={post.createdAt} />\r\n    //             <div className=\"deleteButtonWrapper\">\r\n    //                 <div onClick={() => handleDelete()}>...</div>\r\n    //                 <button onClick={() => handleDelete(post._id)} className={editMode ? \"unhide\" : \"hide\"}>Delete</button>\r\n    //                 <p>{post.isPrivate ? \"Private\" : \"Public\"}</p>\r\n    //             </div>\r\n    //         </div>\r\n    //     )\r\n    // })\r\n\r\n    useEffect(()=>{\r\n        getPosts(1);\r\n    },[theme])\r\n\r\n    // const reversedArray = paginatedPosts.flat().reverse();\r\n\r\n    return (\r\n        <section id=\"postWrapper\" className={theme === \"light\" ? \"postWrapperLight\" : \"postWrapperShadow\"}>\r\n            {theme === \"light\" ? <h2>Affirmations</h2> : <h2>Shadow Thoughts</h2>}\r\n            <div className={!editMode ? \"hide\" : \"unhide\"} onClick={()=>setEditMode(!editMode)}>Delete Entries</div>\r\n            <PostTextBox theme={theme} id={id} setPost={setPost} post={post} handleSubmit={handleSubmit} />\r\n            <p>{message.length > 0 ? message : \"\"}</p>\r\n            {/* <Paginate page={page} getPosts={getPosts} /> */}\r\n            <InfiniteScroll\r\n                // height={\"100%\"}\r\n                dataLength={paginatedPosts.length}\r\n                next={() => handleInfiniteScroll(getPosts, page)}\r\n                // inverse={false} //\r\n                hasMore={page.next}\r\n                loader={<h4>Loading...</h4>}\r\n                scrollableTarget=\"scrollableDiv\"\r\n                scrollThreshold={.99}\r\n            >\r\n                {paginatedPosts.flat().map((post, index) => (\r\n                    <div key={index}>\r\n                        <Post username={user.username} profilePicture={user.profilePicture} content={post.content} handleDelete={handleDelete} theme={post.theme} date={post.createdAt} />\r\n                        <div className=\"deleteButtonWrapper\">\r\n                            <div onClick={() => handleDelete()}>...</div>\r\n                            <button onClick={() => handleDelete(post._id)} className={editMode ? \"unhide\" : \"hide\"}>Delete</button>\r\n                            <p>{post.isPrivate ? \"Private\" : \"Public\"}</p>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n\r\n            </InfiniteScroll>\r\n            {/* {mappedPost} */}\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default MainCard;","C:\\Users\\13233\\Desktop\\portfolio\\user-login\\user-login\\frontend\\src\\pages\\PublicProfile.js",["177","178","179","180"],[],"import Banner from \"../components/Banner\";\r\nimport UserCard from \"../components/UserCard\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport useAuth from \"../hooks/useAuth\";\r\nimport axios, { axiosPrivate } from \"../api/axios\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport PublicMainCard from \"../components/PublicMainCard\";\r\nimport \"./profile.css\"\r\n\r\nconst LIMIT = 10;\r\nfunction PublicProfile(props) {\r\n\r\n    const [userId, setUserId] = useState(window.location.pathname.split(\"/\")[2]);\r\n    const [userInfo, setUserInfo] = useState({\r\n        id: userId,\r\n        username: \"\",\r\n        bio: \"\",\r\n        profilePicture: \"\"\r\n\r\n    });\r\n    const [theme, setTheme] = useState(\"light\");\r\n    const [paginatedPosts, setPaginatedPosts] = useState([]);\r\n\r\n    //State variable for the pagination results\r\n    const [page, setPage] = useState({\r\n        next: {\r\n            page: 0,\r\n            limit: 0\r\n        },\r\n        previous: {\r\n            page: 0,\r\n            limit: 0\r\n        },\r\n    });\r\n\r\n    useEffect(() => {\r\n        // const url = window.location.pathname\r\n        // const urlSplit = url.split(\"/\");\r\n        // setUserId(urlSplit[2])\r\n        getUser();\r\n        getPosts(1);\r\n        console.log(\"user\", userInfo)\r\n\r\n    }, [theme]);\r\n\r\n    const handleChangeTheme = (themeChosen) => {\r\n        setPaginatedPosts([]);\r\n        setTheme(themeChosen);\r\n        // setPost((prevData)=>({...prevData, postTheme: themeChosen}))\r\n    }\r\n\r\n    const getPosts = async (nextPage) => {\r\n        const controller = new AbortController();\r\n        try {\r\n\r\n            const response = await axiosPrivate.get(`/posts/paginate/?id=${userId}&page=${nextPage}&limit=${LIMIT}&theme=${theme}`, {\r\n                signal: controller.signal\r\n            });\r\n\r\n            controller.abort();\r\n\r\n            setPage({\r\n                next: response?.data?.next,\r\n                previous: response?.data?.previous,\r\n                total: response?.data?.total\r\n            });\r\n\r\n            setPaginatedPosts([...paginatedPosts, response?.data?.results]);\r\n\r\n        } catch (e) {\r\n\r\n            console.log(\"error\", e);\r\n        }\r\n    }\r\n\r\n    const getUser = async () => {\r\n        const controller = new AbortController();\r\n\r\n        try {\r\n            const response = await axios.get(`/users/${userId}`,{\r\n                signal: controller.signal\r\n            });\r\n\r\n            console.log('response in pubic', response.data)\r\n\r\n            setUserInfo({\r\n                id: response?.data?._id,\r\n                username: response?.data?.username,\r\n                bio: response?.data?.bio,\r\n                profilePicture: response?.data?.profilePicture\r\n            })\r\n\r\n            setPaginatedPosts([...paginatedPosts, response.data]);\r\n            controller.abort();\r\n\r\n            // await getPosts(1);\r\n\r\n\r\n\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    console.log(\"user info\", userInfo);\r\n\r\n    return (\r\n        <div className=\"profileWrapper\">\r\n            <Banner theme={theme} setTheme={setTheme} handleChangeTheme={handleChangeTheme} />\r\n            <UserCard theme={theme} user={userInfo} numberOfPosts={page.total} />\r\n            <PublicMainCard theme={theme} user={userInfo} paginatedPosts={paginatedPosts.flat()} setPaginatedPosts={setPaginatedPosts} page={page}  getPosts={getPosts}/>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default PublicProfile;","C:\\Users\\13233\\Desktop\\portfolio\\user-login\\user-login\\frontend\\src\\components\\PublicMainCard.js",["181","182","183","184","185","186","187","188","189"],[],"import React, { useState } from \"react\";\r\nimport PostTextBox from \"./PostTextBox\";\r\nimport Post from \"./Post\";\r\nimport \"../pages/profile.css\"\r\nimport { handleInfiniteScroll } from \"./handlePaginate\";\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport { useEffect } from \"react\";\r\nimport axios from \"../api/axios\";\r\n\r\n\r\nfunction PublicMainCard(props) {\r\n\r\n\r\n    const { theme, user, paginatedPosts, setPost, post, message, page, getPosts, setPaginatedPosts } = props;\r\n\r\n    const { id } = user;\r\n\r\n\r\n    //////////Need to find to hide delete button\r\n    console.log(\"posts in main card\", paginatedPosts)\r\n    //commented to test infinte scroll feature.\r\n    // const mappedPost = paginatedPosts?.map((post, i) => {\r\n    //     return (\r\n    //         <div key={i} >\r\n    //             <Post username={post.author.username} profilePicture={post.author.profilePicture} content={post.content} handleDelete={handleDelete} theme={post.theme} date={post.createdAt} />\r\n    //             <div className=\"deleteButtonWrapper\">\r\n    //                 <div onClick={() => handleDelete()}>...</div>\r\n    //                 <button onClick={() => handleDelete(post._id)} className={editMode ? \"unhide\" : \"hide\"}>Delete</button>\r\n    //                 <p>{post.isPrivate ? \"Private\" : \"Public\"}</p>\r\n    //             </div>\r\n    //         </div>\r\n    //     )\r\n    // })\r\n\r\n    return (\r\n        <section id=\"postWrapper\" className={theme === \"light\" ? \"postWrapperLight\" : \"postWrapperShadow\"}>\r\n            {theme === \"light\" ? <h2>Affirmations</h2> : <h2>Shadow Thoughts</h2>}\r\n            {/* <Paginate page={page} getPosts={getPosts} /> */}\r\n            <InfiniteScroll\r\n                // height={\"100%\"}\r\n                dataLength={paginatedPosts?.length}\r\n                next={()=>handleInfiniteScroll(getPosts, page)}\r\n                // inverse={false} //\r\n                hasMore={page.next}\r\n                loader={<h4>Loading...</h4>}\r\n                scrollableTarget=\"scrollableDiv\"\r\n                scrollThreshold={.99}\r\n            >\r\n                {paginatedPosts.flat().map((post, index) => (\r\n                    <div key={index}>\r\n                        <Post username={user.username} profilePicture={user.profilePicture} content={post.content}theme={post.theme} date={post.createdAt} />\r\n                    </div>\r\n                ))}\r\n                  \r\n            </InfiniteScroll>\r\n            {/* {mappedPost} */}\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default PublicMainCard;","C:\\Users\\13233\\Desktop\\portfolio\\user-login\\user-login\\frontend\\src\\components\\handlePaginate.js",[],[],"C:\\Users\\13233\\Desktop\\portfolio\\user-login\\user-login\\frontend\\src\\features\\Register.js",["190"],[],"import { useRef, useState, useEffect } from \"react\";\r\nimport axios from '../api/axios';\r\nimport { Link } from \"react-router-dom\";\r\nimport Select from \"../components/Select\";\r\n\r\nconst USER_REGEX = /^[A-z][A-z0-9-_]{3,23}$/;\r\nconst PWD_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%]).{8,24}$/;\r\nconst REGISTER_URL = '/register';\r\n\r\nconst Register = () => {\r\n    const userRef = useRef();\r\n    const errRef = useRef();\r\n\r\n    const [user, setUser] = useState('');\r\n    const [validName, setValidName] = useState(false);\r\n    const [userFocus, setUserFocus] = useState(false);\r\n\r\n    const [pwd, setPwd] = useState('');\r\n    const [validPwd, setValidPwd] = useState(false);\r\n    const [pwdFocus, setPwdFocus] = useState(false);\r\n\r\n    const [matchPwd, setMatchPwd] = useState('');\r\n    const [validMatch, setValidMatch] = useState(false);\r\n    const [matchFocus, setMatchFocus] = useState(false);\r\n\r\n    const [errMsg, setErrMsg] = useState('');\r\n    const [success, setSuccess] = useState(false);\r\n\r\n    const [horoscopeSign, setHoroscopeSign] = useState(\"\");\r\n\r\n    console.log(\"horoscope selected\", horoscopeSign)\r\n\r\n    useEffect(() => {\r\n        userRef.current.focus();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setValidName(USER_REGEX.test(user));\r\n    }, [user])\r\n\r\n    useEffect(() => {\r\n        setValidPwd(PWD_REGEX.test(pwd));\r\n        setValidMatch(pwd === matchPwd);\r\n    }, [pwd, matchPwd])\r\n\r\n    useEffect(() => {\r\n        setErrMsg('');\r\n    }, [user, pwd, matchPwd])\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        // if button enabled with JS hack\r\n        const v1 = USER_REGEX.test(user);\r\n        const v2 = PWD_REGEX.test(pwd);\r\n        if (!v1 || !v2) {\r\n            setErrMsg(\"Invalid Entry\");\r\n            return;\r\n        }\r\n        try {\r\n            const response = await axios.post(REGISTER_URL,\r\n                JSON.stringify({ user, pwd, horoscopeSign }),\r\n                {\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    withCredentials: true\r\n                }\r\n            );\r\n            // TODO: remove console.logs before deployment\r\n            console.log(JSON.stringify(response?.data));\r\n            //console.log(JSON.stringify(response))\r\n            setSuccess(true);\r\n            //clear state and controlled inputs\r\n            setUser('');\r\n            setPwd('');\r\n            setMatchPwd('');\r\n        } catch (err) {\r\n            if (!err?.response) {\r\n                setErrMsg('No Server Response');\r\n            } else if (err.response?.status === 409) {\r\n                setErrMsg('Username Taken');\r\n            } else {\r\n                setErrMsg('Registration Failed')\r\n            }\r\n            errRef.current.focus();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {success ? (\r\n                <section>\r\n                    <h1>Success!</h1>\r\n                    <p>\r\n                        <a href=\"#\">Sign In</a>\r\n                    </p>\r\n                </section>\r\n            ) : (\r\n                <section>\r\n                    <p ref={errRef} className={errMsg ? \"errmsg\" : \"offscreen\"} aria-live=\"assertive\">{errMsg}</p>\r\n                    <h1>Register</h1>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <label htmlFor=\"username\">\r\n                            Username:\r\n                            {/* <FontAwesomeIcon icon={faCheck} className={validName ? \"valid\" : \"hide\"} />\r\n                            <FontAwesomeIcon icon={faTimes} className={validName || !user ? \"hide\" : \"invalid\"} /> */}\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"username\"\r\n                            ref={userRef}\r\n                            autoComplete=\"off\"\r\n                            onChange={(e) => setUser(e.target.value)}\r\n                            value={user}\r\n                            required\r\n                            aria-invalid={validName ? \"false\" : \"true\"}\r\n                            aria-describedby=\"uidnote\"\r\n                            onFocus={() => setUserFocus(true)}\r\n                            onBlur={() => setUserFocus(false)}\r\n                        />\r\n                        <p id=\"uidnote\" className={userFocus && user && !validName ? \"instructions\" : \"offscreen\"}>\r\n                            4 to 24 characters.<br />\r\n                            Must begin with a letter.<br />\r\n                            Letters, numbers, underscores, hyphens allowed.\r\n                        </p>\r\n\r\n\r\n                        <label htmlFor=\"password\">\r\n                            Password:\r\n                            {/* <FontAwesomeIcon icon={faCheck} className={validPwd ? \"valid\" : \"hide\"} />\r\n                            <FontAwesomeIcon icon={faTimes} className={validPwd || !pwd ? \"hide\" : \"invalid\"} /> */}\r\n                        </label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            onChange={(e) => setPwd(e.target.value)}\r\n                            value={pwd}\r\n                            required\r\n                            aria-invalid={validPwd ? \"false\" : \"true\"}\r\n                            aria-describedby=\"pwdnote\"\r\n                            onFocus={() => setPwdFocus(true)}\r\n                            onBlur={() => setPwdFocus(false)}\r\n                        />\r\n                        <p id=\"pwdnote\" className={pwdFocus && !validPwd ? \"instructions\" : \"offscreen\"}>\r\n                            8 to 24 characters.<br />\r\n                            Must include uppercase and lowercase letters, a number and a special character.<br />\r\n                            Allowed special characters: <span aria-label=\"exclamation mark\">!</span> <span aria-label=\"at symbol\">@</span> <span aria-label=\"hashtag\">#</span> <span aria-label=\"dollar sign\">$</span> <span aria-label=\"percent\">%</span>\r\n                        </p>\r\n\r\n\r\n                        <label htmlFor=\"confirm_pwd\">\r\n                            Confirm Password:\r\n                            {/* <FontAwesomeIcon icon={faCheck} className={validMatch && matchPwd ? \"valid\" : \"hide\"} />\r\n                            <FontAwesomeIcon icon={faTimes} className={validMatch || !matchPwd ? \"hide\" : \"invalid\"} /> */}\r\n                        </label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"confirm_pwd\"\r\n                            onChange={(e) => setMatchPwd(e.target.value)}\r\n                            value={matchPwd}\r\n                            required\r\n                            aria-invalid={validMatch ? \"false\" : \"true\"}\r\n                            aria-describedby=\"confirmnote\"\r\n                            onFocus={() => setMatchFocus(true)}\r\n                            onBlur={() => setMatchFocus(false)}\r\n                        />\r\n                        <p id=\"confirmnote\" className={matchFocus && !validMatch ? \"instructions\" : \"offscreen\"}>\r\n                            Must match the first password input field.\r\n                        </p>\r\n\r\n                        <label htmlFor=\"horoscopeSign\">Horoscope:</label>\r\n                        <Select value={horoscopeSign} setHoroscopeSign={setHoroscopeSign} />\r\n\r\n                        <button disabled={!validName || !validPwd || !validMatch ? true : false}>Sign Up</button>\r\n                    </form>\r\n                    <p>\r\n                        Already registered?<br />\r\n                        <span className=\"line\">\r\n                            <Link to=\"/\">Sign In</Link>\r\n                        </span>\r\n                    </p>\r\n                </section>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Register\r\n","C:\\Users\\13233\\Desktop\\portfolio\\user-login\\user-login\\frontend\\src\\components\\Select.js",[],[],"C:\\Users\\13233\\Desktop\\portfolio\\user-login\\user-login\\frontend\\src\\pages\\News.js",[],[],"C:\\Users\\13233\\Desktop\\portfolio\\user-login\\user-login\\frontend\\src\\pages\\Feedback.js",["191"],[],"import { useState } from \"react\"\r\nimport { axiosPrivate } from \"../api/axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Feedback = () => {\r\n\r\n    const [feedback, setFeedback] = useState({\r\n        content: \"\"\r\n    });\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    const handleSubmit = async (e) => {\r\n        console.log(\"clicked\")\r\n        e.preventDefault();\r\n\r\n        if(feedback.content.length < 0) return setMessage(\"Seems like your comment is blank.\");\r\n\r\n        if(feedback.content.length > 100) return setMessage(\"Seems like your comment is too long.\");\r\n\r\n        try{\r\n\r\n            const response = await axiosPrivate.post('/feedback', feedback);\r\n\r\n            setFeedback({\r\n                content: \"\"\r\n            });\r\n\r\n        }catch(e){\r\n            setMessage(\"Something went wrong.\")\r\n        }\r\n        setMessage(\"Thank you for your feedback.\");\r\n    }\r\n\r\n\r\n    return (\r\n        <section class=\"sectionWrapper\">\r\n            <Link to=\"/\">Home</Link>\r\n            <h1>Feedback</h1>\r\n            <input\r\n                type=\"textbox\"\r\n                className=\"postTextBoxWrapper\"\r\n                placeholder=\"Your feedback is very appreciated.\"\r\n                maxLength={100}\r\n                name='feedback'\r\n                value={feedback.content}\r\n                onChange={(e) => setFeedback({content: e.target.value})}\r\n            />\r\n            <p>{message}</p>\r\n            <button onClick={handleSubmit}>Submit</button>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Feedback;","C:\\Users\\13233\\Desktop\\portfolio\\user-login\\user-login\\frontend\\src\\components\\PostTextBox.js",["192","193","194","195"],[],"import { useEffect, useState } from \"react\";\r\nimport axios from \"../api/axios\";\r\nimport useAuth from \"../hooks/useAuth\";\r\nimport { axiosPrivate } from \"../api/axios\";\r\n\r\nfunction PostTextBox(props) {\r\n\r\n    const { setPost, handleSubmit, post } = props;\r\n\r\n    useEffect(() => { }, [post])\r\n\r\n    return (\r\n        <div className=\"textBoxContainer\">\r\n            <input\r\n                type=\"textbox\"\r\n                className=\"postTextBoxWrapper\"\r\n                placeholder=\"What's on your mind?\"\r\n                maxLength={100}\r\n                name='content'\r\n                value={post.content}\r\n                onChange={(e) => setPost((prevData) => ({ ...prevData, content: e.target.value }))}\r\n            />\r\n            <div className=\"textBoxControls\">\r\n                <button onClick={handleSubmit}>Manifest</button>\r\n                <label htmlFor=\"isPrivate\">Private</label>\r\n                <input\r\n                    type=\"radio\"\r\n                    name=\"isPrivate\"\r\n                    value={post.isPrivate}\r\n                    onChange={(e) => setPost((prevData) => ({ ...prevData, isPrivate: true }))}\r\n                />\r\n                <label htmlFor=\"isPrivate\">Public</label>\r\n                <input\r\n                    type=\"radio\"\r\n                    name=\"isPrivate\"\r\n                    value={post.isPrivate}\r\n                    onChange={(e) => setPost((prevData) => ({ ...prevData, isPrivate: false }))}\r\n                />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostTextBox;","C:\\Users\\13233\\Desktop\\portfolio\\user-login\\user-login\\frontend\\src\\index.js",["196"],[],"import React from 'react';\r\nimport {createRoot} from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { AuthProvider } from './context/AuthProvider';\r\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\r\nimport {disableReactDevTools} from \"@fvilers/disable-react-devtools\"\r\n\r\n// if(process.env.NODE_ENV === 'production'){\r\n//   disableReactDevTools();\r\n// }\r\n\r\nconst root = createRoot(document.getElementById(\"root\"));\r\n\r\nroot.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <AuthProvider>\r\n        <Routes>\r\n          <Route path=\"/*\" element={<App />} />\r\n        </Routes>\r\n      </AuthProvider>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n);","C:\\Users\\13233\\Desktop\\portfolio\\user-login\\user-login\\frontend\\src\\context\\AuthProvider.js",[],[],"C:\\Users\\13233\\Desktop\\portfolio\\user-login\\user-login\\frontend\\src\\pages\\Unauthorized.js",[],[],"C:\\Users\\13233\\Desktop\\portfolio\\user-login\\user-login\\frontend\\src\\pages\\Missing.js",[],[],"C:\\Users\\13233\\Desktop\\portfolio\\user-login\\user-login\\frontend\\src\\components\\PersistLogin.js",["197","198"],[],"import { Outlet } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport useRefreshToken from '../hooks/useRefreshToken';\r\nimport useAuth from '../hooks/useAuth';\r\n\r\nconst PersistLogin = () => {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const refresh = useRefreshToken();\r\n    const { auth, persist } = useAuth();\r\n\r\n    useEffect(() => {\r\n        let isMounted = true;\r\n\r\n        const verifyRefreshToken = async () => {\r\n            try {\r\n                await refresh();\r\n            }\r\n            catch (err) {\r\n                console.error(err);\r\n            }\r\n            finally {\r\n                isMounted && setIsLoading(false);\r\n            }\r\n        }\r\n\r\n        // persist added here AFTER tutorial video\r\n        // Avoids unwanted call to verifyRefreshToken\r\n        !auth?.accessToken && persist ? verifyRefreshToken() : setIsLoading(false);\r\n\r\n        return () => isMounted = false;\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        console.log(`isLoading: ${isLoading}`)\r\n        console.log(`aT: ${JSON.stringify(auth?.accessToken)}`)\r\n    }, [isLoading])\r\n\r\n    return (\r\n        <>\r\n            {!persist\r\n                ? <Outlet />\r\n                : isLoading\r\n                    ? <p>Loading...</p>\r\n                    : <Outlet />\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PersistLogin","C:\\Users\\13233\\Desktop\\portfolio\\user-login\\user-login\\frontend\\src\\components\\RequireAuth.js",[],[],"C:\\Users\\13233\\Desktop\\portfolio\\user-login\\user-login\\frontend\\src\\components\\Layout.js",[],[],"C:\\Users\\13233\\Desktop\\portfolio\\user-login\\user-login\\frontend\\src\\api\\axios.js",[],[],"C:\\Users\\13233\\Desktop\\portfolio\\user-login\\user-login\\frontend\\src\\hooks\\useAuth.js",[],[],"C:\\Users\\13233\\Desktop\\portfolio\\user-login\\user-login\\frontend\\src\\hooks\\useLogout.js",["199"],[],"import axios from \"../api/axios\";\r\nimport useAuth from \"./useAuth\";\r\n\r\nconst useLogout = () => {\r\n    const { setAuth } = useAuth();\r\n\r\n    const logout = async () => {\r\n        setAuth({});\r\n        try {\r\n            const response = await axios('/logout', {\r\n                withCredentials: true\r\n            });\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n    return logout;\r\n}\r\n\r\nexport default useLogout","C:\\Users\\13233\\Desktop\\portfolio\\user-login\\user-login\\frontend\\src\\hooks\\useRefreshToken.js",["200"],[],"import axios from '../api/axios';\r\nimport useAuth from './useAuth';\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nconst useRefreshToken = () => {\r\n    const { setAuth } = useAuth();\r\n\r\n    const refresh = async () => {\r\n        const response = await axios.get('/refresh', {\r\n            withCredentials: true\r\n        });\r\n\r\n        setAuth(prev => {\r\n    \r\n            return {\r\n                ...prev,\r\n                accessToken: response.data.accessToken\r\n            }\r\n        });\r\n        return response.data.accessToken;\r\n    }\r\n    return refresh;\r\n};\r\n\r\nexport default useRefreshToken;\r\n","C:\\Users\\13233\\Desktop\\portfolio\\user-login\\user-login\\frontend\\src\\components\\Post.js",["201"],[],"function Post(props) {\r\n\r\n    const { username, content, profilePicture, theme, date } = props;\r\n\r\n    const newDate = new Date(date);\r\n\r\n    const month = newDate.getMonth() + 1;\r\n    const day = newDate.getDate() + 1;\r\n    const year = newDate.getFullYear();\r\n    const dateOfPost = `${month}/${day}/${year}`\r\n\r\n\r\n  \r\n\r\n\r\n    return (\r\n        <article className={theme === \"light\" ? \"lightPostCard\" : \"shadowPostCard\"}>\r\n            <div className=\"postUserInfoFlex\">\r\n                <div id=\"postProfilePicture\" className=\"profilePictureWrapper\">\r\n                    <img className=\"profilePicture\" src={profilePicture} alt=\"profile picture\" />\r\n                </div>\r\n                <h3 id=\"postUsername\">{username}</h3>\r\n                <p id=\"postDate\">{dateOfPost}</p>\r\n            </div>\r\n            <p>{content}</p>\r\n        </article>\r\n    )\r\n}\r\n\r\nexport default Post;","C:\\Users\\13233\\Desktop\\portfolio\\user-login\\user-login\\frontend\\src\\components\\NavBar.js",[],[],"C:\\Users\\13233\\Desktop\\portfolio\\user-login\\user-login\\frontend\\src\\pages\\About.js",[],[],{"ruleId":"202","severity":1,"message":"203","line":1,"column":29,"nodeType":"204","messageId":"205","endLine":1,"endColumn":44},{"ruleId":"202","severity":1,"message":"206","line":7,"column":10,"nodeType":"204","messageId":"205","endLine":7,"endColumn":25},{"ruleId":"207","severity":1,"message":"208","line":60,"column":8,"nodeType":"209","endLine":60,"endColumn":10,"suggestions":"210"},{"ruleId":"202","severity":1,"message":"211","line":4,"column":8,"nodeType":"204","messageId":"205","endLine":4,"endColumn":18},{"ruleId":"202","severity":1,"message":"212","line":1,"column":17,"nodeType":"204","messageId":"205","endLine":1,"endColumn":26},{"ruleId":"202","severity":1,"message":"213","line":3,"column":8,"nodeType":"204","messageId":"205","endLine":3,"endColumn":15},{"ruleId":"202","severity":1,"message":"214","line":8,"column":12,"nodeType":"204","messageId":"205","endLine":8,"endColumn":22},{"ruleId":"202","severity":1,"message":"215","line":8,"column":24,"nodeType":"204","messageId":"205","endLine":8,"endColumn":37},{"ruleId":"216","severity":1,"message":"217","line":27,"column":80,"nodeType":"218","messageId":"219","endLine":27,"endColumn":82},{"ruleId":"207","severity":1,"message":"208","line":55,"column":7,"nodeType":"209","endLine":55,"endColumn":14,"suggestions":"220"},{"ruleId":"202","severity":1,"message":"213","line":5,"column":8,"nodeType":"204","messageId":"205","endLine":5,"endColumn":15},{"ruleId":"202","severity":1,"message":"211","line":7,"column":8,"nodeType":"204","messageId":"205","endLine":7,"endColumn":18},{"ruleId":"202","severity":1,"message":"221","line":14,"column":20,"nodeType":"204","messageId":"205","endLine":14,"endColumn":29},{"ruleId":"207","severity":1,"message":"222","line":45,"column":8,"nodeType":"209","endLine":45,"endColumn":15,"suggestions":"223"},{"ruleId":"202","severity":1,"message":"224","line":1,"column":17,"nodeType":"204","messageId":"205","endLine":1,"endColumn":25},{"ruleId":"202","severity":1,"message":"225","line":2,"column":8,"nodeType":"204","messageId":"205","endLine":2,"endColumn":19},{"ruleId":"202","severity":1,"message":"212","line":7,"column":10,"nodeType":"204","messageId":"205","endLine":7,"endColumn":19},{"ruleId":"202","severity":1,"message":"226","line":8,"column":8,"nodeType":"204","messageId":"205","endLine":8,"endColumn":13},{"ruleId":"202","severity":1,"message":"227","line":14,"column":42,"nodeType":"204","messageId":"205","endLine":14,"endColumn":49},{"ruleId":"202","severity":1,"message":"228","line":14,"column":51,"nodeType":"204","messageId":"205","endLine":14,"endColumn":55},{"ruleId":"202","severity":1,"message":"229","line":14,"column":57,"nodeType":"204","messageId":"205","endLine":14,"endColumn":64},{"ruleId":"202","severity":1,"message":"230","line":14,"column":82,"nodeType":"204","messageId":"205","endLine":14,"endColumn":99},{"ruleId":"202","severity":1,"message":"231","line":16,"column":13,"nodeType":"204","messageId":"205","endLine":16,"endColumn":15},{"ruleId":"232","severity":1,"message":"233","line":93,"column":25,"nodeType":"234","endLine":93,"endColumn":37},{"ruleId":"202","severity":1,"message":"235","line":22,"column":19,"nodeType":"204","messageId":"205","endLine":22,"endColumn":27},{"ruleId":"202","severity":1,"message":"224","line":1,"column":21,"nodeType":"204","messageId":"205","endLine":1,"endColumn":29},{"ruleId":"202","severity":1,"message":"226","line":2,"column":8,"nodeType":"204","messageId":"205","endLine":2,"endColumn":13},{"ruleId":"202","severity":1,"message":"213","line":3,"column":8,"nodeType":"204","messageId":"205","endLine":3,"endColumn":15},{"ruleId":"202","severity":1,"message":"236","line":4,"column":10,"nodeType":"204","messageId":"205","endLine":4,"endColumn":22},{"ruleId":"202","severity":1,"message":"237","line":7,"column":9,"nodeType":"204","messageId":"205","endLine":7,"endColumn":29},{"ruleId":"207","severity":1,"message":"238","line":31,"column":8,"nodeType":"209","endLine":31,"endColumn":10,"suggestions":"239"},{"ruleId":"207","severity":1,"message":"240","line":36,"column":8,"nodeType":"209","endLine":36,"endColumn":19,"suggestions":"241"},{"ruleId":"202","severity":1,"message":"235","line":10,"column":19,"nodeType":"204","messageId":"205","endLine":10,"endColumn":27},{"ruleId":"202","severity":1,"message":"211","line":3,"column":8,"nodeType":"204","messageId":"205","endLine":3,"endColumn":18},{"ruleId":"242","severity":1,"message":"243","line":20,"column":21,"nodeType":"234","endLine":20,"endColumn":98},"no-unused-vars","'useSearchParams' is defined but never used.","Identifier","unusedVar","'FontAwesomeIcon' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getPosts'. Either include it or remove the dependency array.","ArrayExpression",["244"],"'jwt_decode' is defined but never used.","'useEffect' is defined but never used.","'useAuth' is defined but never used.","'totalPosts' is assigned a value but never used.","'setTotalPosts' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["245"],"'setUserId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getPosts', 'getUser', and 'userInfo'. Either include them or remove the dependency array.",["246"],"'useState' is defined but never used.","'PostTextBox' is defined but never used.","'axios' is defined but never used.","'setPost' is assigned a value but never used.","'post' is assigned a value but never used.","'message' is assigned a value but never used.","'setPaginatedPosts' is assigned a value but never used.","'id' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'response' is assigned a value but never used.","'axiosPrivate' is defined but never used.","'disableReactDevTools' is defined but never used.","React Hook useEffect has missing dependencies: 'auth?.accessToken', 'persist', and 'refresh'. Either include them or remove the dependency array.",["247"],"React Hook useEffect has a missing dependency: 'auth?.accessToken'. Either include it or remove the dependency array.",["248"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.",{"desc":"249","fix":"250"},{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},{"desc":"255","fix":"256"},{"desc":"257","fix":"258"},"Update the dependencies array to be: [getPosts]",{"range":"259","text":"260"},"Update the dependencies array to be: [getPosts, theme]",{"range":"261","text":"262"},"Update the dependencies array to be: [getPosts, getUser, theme, userInfo]",{"range":"263","text":"264"},"Update the dependencies array to be: [auth?.accessToken, persist, refresh]",{"range":"265","text":"266"},"Update the dependencies array to be: [auth?.accessToken, isLoading]",{"range":"267","text":"268"},[1507,1509],"[getPosts]",[1961,1968],"[getPosts, theme]",[1274,1281],"[getPosts, getUser, theme, userInfo]",[956,958],"[auth?.accessToken, persist, refresh]",[1106,1117],"[auth?.accessToken, isLoading]"]